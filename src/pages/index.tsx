import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { Message } from "../components/message";
import { prisma } from "../server/prisma";

const staticSlackInfo = {
  teamId: "T040WFQ9QAZ",
  channelId: "C040SSFN6TY",
  messageTs: "1663492337.707879",
};

type ServerSideProps = {
  message: string;
};

export const getServerSideProps: GetServerSideProps<
  ServerSideProps
> = async () => {
  const message = await prisma.message.findUnique({
    where: {
      slackChannelId_slackMessageTs_slackTeamId: {
        slackChannelId: staticSlackInfo.channelId,
        slackMessageTs: staticSlackInfo.messageTs,
        slackTeamId: staticSlackInfo.teamId,
      },
    },
  });

  if (message === null) {
    throw new Error("Not supposed to happen");
  }

  return {
    props: {
      message: message.slackMessage,
    },
  };
};

const Home: NextPage<ServerSideProps> = ({ message }) => {
  return (
    <>
      <Head>
        <title>Slack Searchable</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Message
        message={message}
        userName={"Hey there"}
        createdAt={new Date(new Date().getTime() - 24 * 60 * 60 * 1000)}
      />
    </>
  );
};

export default Home;
